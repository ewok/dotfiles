#!/usr/bin/env bash

CMD="$1"
NAME="$2"

if [ ! $(command -v rofi_run) ];then echo "Install rofi" >&2; exit 1;fi
if [ ! $(command -v ykman) ];then YKMAN=1; else YKMAN=0;fi
if [ ! $(command -v setfattr) ];then SE=1; else SE=0;fi

#  Init sudo
prompt=$(sudo -nv 2>&1)
if [ $? -eq 0 ]; then
  echo "sudo granted" >&2
elif echo $prompt | grep -q '^sudo:'; then
  echo "$(rofi_run -password -dmenu -p 'Sudo password' -l 0 -sidebar -width 20)" | sudo -S echo "Granted" >&2
else
  rofi_run -dmenu -mesg "You don't have sudo priveleges." -a "vpn"
  exit 2
fi

export DBUS_SESSION_BUS_ADDRESS=/dev/null

PID=~/.cache/vpn-$NAME.pid
VPN_DIR=~/share/vpn

set -e

case "$CMD" in
  run)
    if [[ -z "$NAME" ]];then echo "Please specify vpn name!" >&2; exit 1;fi
    ;;
  stop)
    if [[ -z "$NAME" ]];then echo "Please specify vpn name!" >&2; exit 1;fi
    if [[ -f $PID ]];then
      sudo kill $(cat $PID)
      rm -f $PID
      exit 0
    else
      echo "VPN $NAME is not running" >&2
      exit 1
    fi
    ;;
  status)
    if [[ -z "$NAME" ]];then echo "Please specify vpn name!" >&2; exit 1;fi
    if [[ -f $PID ]];then
      if ps -p $(cat $PID) > /dev/null; then
        echo "running"
        exit 0
      fi
    fi
    echo "stopped"
    exit 0
    ;;
  status-all)
    # for all pids on ~/.cache/vpn-*.pid check status
    for pid in $(ls ~/.cache/vpn-*.pid); do
      T_NAME=$(echo $pid | cut -f2 -d- | cut -f1 -d.)
      if [[ -f $pid ]];then
        if ps -p $(cat $pid) > /dev/null; then
          echo -n "${T_NAME}:ðŸŸ¢ "
        else
          echo -n "${T_NAME}:ðŸ”´ "
        fi
      else
        echo -n "${T_NAME}:ðŸ”´ "
      fi
    done
    exit 0
    ;;
  *)
    echo "Unsupported command, use: run,stop,status,status-all" >&2
    exit 2
    ;;
esac

# check if PID exists and process is running
if [[ -f $PID ]];then
  if ps -p $(cat $PID) > /dev/null; then
    echo "VPN $NAME is already running" >&2
    exit 1
  else
    rm -f $PID
  fi
fi

cleanup()
{
  sudo rm -f $VPN_DIR/*.pw
}
trap 'cleanup' 1 2 3 6 15

get()
{
  prop_name=$1
  if [[ -x $VPN_DIR/$NAME.conf ]];then
    config="$($VPN_DIR/$NAME.conf)"
  elif [[ -f $VPN_DIR/$NAME.conf ]];then
    config="$(cat $VPN_DIR/$NAME.conf)"
  fi
  echo config | grep "$prop_name" | cut -f2 -d=
}

PASSWORD_TOOL=$(get PwdTool)
PASSWORD_ENTITY=$(get PwdEntity)
OTP_ENTITY=$(get OtpEntity)

if [[ -n "$PASSWORD_TOOL" ]]
then
    sudo rm -f $VPN_DIR/$NAME.pw

    set -e
    case "$PASSWORD_TOOL" in
      lpass)
        lpass show $PASSWORD_ENTITY --username > $VPN_DIR/$NAME.pw
        lpass show $PASSWORD_ENTITY --password >> $VPN_DIR/$NAME.pw
      ;;
      op)
        op-session item get $PASSWORD_ENTITY --fields username > $VPN_DIR/$NAME.pw
        op-session item get $PASSWORD_ENTITY --fields password >> $VPN_DIR/$NAME.pw
      ;;
      # TODO: Add bw
      *)
        echo "Unsupported PW tool $PASSWORD_TOOL" >&2
        exit 2
      ;;
    esac

    sudo chmod 0600 $VPN_DIR/$NAME.pw
    #sudo chown openvpn ~/share/vpn/$NAME.pw
    if [[ $SE -eq 0 ]]; then
        sudo setfattr -n security.selinux -v "system_u:object_r:etc_t:s0" $VPN_DIR/$NAME.pw
    fi

    if [[ $YKMAN -eq 0 ]]; then
        if [[ -n "$OTP_ENTITY" ]]; then
          set +e
          ykman oath accounts code openvpn_$NAME | awk '{print $2}' | xclip
          set -e
        fi
    fi

    else
    echo "nobody" > $VPN_DIR/$NAME.pw
    echo "nopassword" >> $VPN_DIR/$NAME.pw

    if [[ $SE -eq 0 ]]; then
        sudo setfattr -n security.selinux -v "system_u:object_r:etc_t:s0" $VPN_DIR/$NAME.pw
    fi
fi

if [[ $SE -eq 0 ]]; then
    sudo setfattr -n security.selinux -v "system_u:object_r:etc_t:s0" $VPN_DIR/$NAME.ovpn
fi

sudo openvpn --config $VPN_DIR/$NAME.ovpn --status /run/openvpn-$NAME.status 10 --daemon openvpn@$NAME --cd $VPN_DIR/ --auth-user-pass $VPN_DIR/$NAME.pw --writepid $PID
