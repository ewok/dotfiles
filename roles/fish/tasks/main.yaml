- import_tasks: cleanup.yaml

- name: "Install"
  tags:
    - fish
  block:

    - name: "Create basic dirs"
      file:
        dest: "{{ item.dir }}"
        state: directory
      loop:
        - { dir: "~/.config/fish/functions" }
        - { dir: "~/.config/fish/conf.d" }

    - name: "Config"
      copy:
        content: |
          # User specific environment
          if status --is-login
            if builtin functions -q __abbr_tips_init
              __abbr_tips_init
            end

          end
        dest: "~/.config/fish/config.fish"

    - name: "Fisher"
      get_url:
        url: "https://raw.githubusercontent.com/jorgebucaran/fisher/HEAD/functions/fisher.fish"
        dest: "~/.config/fish/functions/fisher.fish"
        mode: 0644
        # checksum: "sha256: cc9531f5aa6fe3a034e3d76d6520e1613695c19448a7a003fc216bc9dbb4ec02"
      notify: "fisher update"

    # Plugins
    - name: "Fish plugin list"
      copy:
        content: |
          Gazorby/fish-abbreviation-tips
          oh-my-fish/plugin-foreign-env
          jethrokuan/fzf
        dest: "~/.config/fish/fish_plugins"
      notify: "fisher update"

    - name: "PreInit"
      copy:
        content: |
          if test -z "$DISPLAY" -a (tty) = "/dev/tty1"
            if status --is-login
              abbr -e (abbr -l)
              fisher update
            end
          end

        dest: "~/.config/fish/conf.d/00_pre_init.fish"

    - name: "Init interactive"
      copy:
        content: |
          if test -z $HOSTNAME; and command -vq hostnamectl
            set -gx HOSTNAME (hostnamectl --transient 2>/dev/null)
          end
          if test -z $HOSTNAME; and command -vq hostname
            set -gx HOSTNAME (hostname 2>/dev/null)
          end
          if test -z $HOSTNAME
            set -gx HOSTNAME (uname -n)
          end

          # Cleanup before init
          set -gx LANG en_US.UTF-8
          set -gx LC_ALL en_US.UTF-8
          set -gx LANGUAGE en_US.UTF-8
          set -gx LC_MEASUREMENT ru_RU.UTF-8
          set -gx LC_MONETARY ru_RU.UTF-8
          set -gx LC_NUMERIC ru_RU.UTF-8
          set -gx LC_PAPER ru_RU.UTF-8
          set -gx LC_TIME ru_RU.UTF-8

          set -gx FZF_LEGACY_KEYBINDINGS 0
          set -gx OPEN_CMD open

          set -gx GTK_THEME Adwaita:dark
          set -gx XDG_CURRENT_DESKTOP sway

          fish_add_path -ga  ~/.local/bin ~/bin
          fish_add_path --path -a  /usr/local/sbin /usr/sbin

          # Use it only in nixshell for projects
          # set -gx SSH_AUTH_SOCK (gpgconf --list-dirs agent-ssh-socket)

          if status is-interactive

            bind \cw backward-kill-word
            bind \e\cB backward-bigword
            bind \e\cF forward-bigword
            bind \e\[109\;5u execute

            if command -vq -- viddy
              alias watch viddy
            end

            if command -vq -- exa
              alias ll "exa -la --git"
              alias ls "exa -a --git"
            end

            if command -vq -- bat
              alias cat "bat"
            end

            if test -z "$DISPLAY" -a (tty) = "/dev/tty1"
              if command -vq -- sway
                exec sway
              end
            end

          end
        dest: "~/.config/fish/conf.d/01_init_interactive.fish"

    - name: "greeting"
      copy:
        content: |
          function fish_greeting

            if test -z "$TB" -a -t 2
                systemctl --state=failed --no-legend --no-pager >&2
                systemctl --user --state=failed --no-legend --no-pager >&2
                if command -vq -- t
                  t ls
                end
            end

            if test -n "$INSIDE_EMACS"
              set TMUX_CMD tmux -L emacs
            else
              set TMUX_CMD "tmux"
            end

            if test "$TB" = "dev"
              if test -z "$TMUX"
                set -l SESS ($TMUX_CMD list-sessions | grep -v attached | cut -d: -f1 | head -n 1)
                echo $SESS
                if test -n "$SESS"
                  if $TMUX_CMD attach -t $SESS
                    exit
                  end
                else
                  if $TMUX_CMD new
                    exit
                  end
                end
              end
            end
          end
        dest: "~/.config/fish/conf.d/95_tmux-init-dev.fish"
