### Variables
#
# Logo key. Use Mod1 for Alt and Mod4 for Super.
set $mod Mod4
set $mod_a Mod1
set $mod_c Control

# Direction keys
set $left h
set $down j
set $up k
set $right l

# Add --to-code to bindsym, support for non-latin layouts
set $bindsym bindsym --to-code

# For user's convenience, the same for unbindsym
set $unbindsym unbindsym --to-code

# background
# set $background /usr/share/backgrounds/manjaro-sway/gruvbox-dark-manjarosway-3840x2160.png

# Your preferred terminal emulator
# TODO: ???
set $term {{ terminal }}
set $term_cwd $term -D "$(swaycwd 2>/dev/null || echo $HOME)"
set $term_float footclient -a floating_shell
set $term_float_portrait footclient -a floating_shell_portrait

# Second app
set $editor em -c

# onscreen bar
set $onscreen_bar bash /usr/share/sway/scripts/wob.sh "$accent-colorFF" "$background-colorFF"

# brightness control
set $brightness_step bash -c 'echo $(( $(light -Mr) / 100 * 5 < 1 ? 1 : $(( $(light -Mr) / 100 * 5 )) ))'
set $brightness_up light -r -A $($brightness_step) && $onscreen_bar $(light -G | cut -d'.' -f1)
set $brightness_down light -r -U $($brightness_step) && $onscreen_bar $(light -G | cut -d'.' -f1)

# audio control
set $sink_volume pactl get-sink-volume @DEFAULT_SINK@ | grep '^Volume:' | cut -d / -f 2 | tr -d ' ' | sed 's/%//'
set $source_volume pactl get-source-volume @DEFAULT_SOURCE@ | grep '^Volume:' | cut -d / -f 2 | tr -d ' ' | sed 's/%//'
set $volume_down $onscreen_bar $(pactl set-sink-volume @DEFAULT_SINK@ -5% && $sink_volume)
set $volume_up $onscreen_bar $(pactl set-sink-volume @DEFAULT_SINK@ +5% && $sink_volume)
set $volume_mute $onscreen_bar $(pactl set-sink-mute @DEFAULT_SINK@ toggle && pactl get-sink-mute @DEFAULT_SINK@ | sed -En "/no/ s/.*/$($sink_volume)/p; /yes/ s/.*/0/p")
set $mic_mute $onscreen_bar $(pactl set-source-mute @DEFAULT_SOURCE@ toggle && pactl get-source-mute @DEFAULT_SOURCE@ | sed -En "/no/ s/.*/$($source_volume)/p; /yes/ s/.*/0/p")

# Pipewire-pulse
# bindsym XF86AudioLowerVolume exec "pactl set-sink-volume 0 -2%;pkill -SIGRTMIN+5 i3blocks"
# bindsym XF86AudioRaiseVolume exec "pactl set-sink-volume 0 +2%;pkill -SIGRTMIN+5 i3blocks"
# bindsym --release --no-repeat XF86AudioMute exec "pactl-mute-all sinks;pkill -SIGRTMIN+5 i3blocks"
# bindsym --release --no-repeat XF86AudioMicMute exec  "pactl-mute-all sources;pkill -SIGRTMIN+5 i3blocks"
# rofi theme
# set $rofi_theme "* {lightbg: $background-color; background: $background-color; lightfg: $accent-color; foreground: $text-color;}"

# clipboard history
set $clipboard cliphist list | rofi_run -dmenu  -p "Select item to copy" -lines 10 -width 35 | cliphist decode | wl-copy
set $clipboard-del cliphist list | rofi_run -dmenu -p "Select item to delete" -lines 10 -width 35 | cliphist delete

# Your preferred application launcher
set $menu rofi_run -show combi -combi-modi "drun,run,ssh" -terminal $term -ssh-command "{terminal} {ssh-client} {host} [-p {port}]" -run-shell-command "{terminal} {cmd}" -show-icons -lines 10 -width 35 


## Custom apps
set $add-todo "add-todo"
set $restore-notification "makoctl restore"

### Lockscreen configuration
set $locking swaylock --daemonize --color "$selection-color" --inside-color "$selection-color" --inside-clear-color "$text-color" --ring-color "$base02" --ring-clear-color "$base0B" --ring-ver-color "$base0D" --show-failed-attempts --ignore-empty-password

###Notification daemon configuration
set $notifications mako --font "$term-font" --text-color "$text-color" --border-color "$accent-color" --background-color "$background-color" --border-size 3 --width 400 --height 200 --padding 20 --margin 20 --default-timeout 15000

### Idle configuration
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
#
set $idle swayidle -w \
    timeout 240 'light -G > /tmp/brightness && light -S 10' resume 'light -S $([ -f /tmp/brightness ] && cat /tmp/brightness || echo 100%)' \
    timeout 300 'exec $locking' \
    timeout 600 'swaymsg "output * dpms off"' \
    resume 'swaymsg "output * dpms on"' \
    before-sleep 'playerctl pause' \
    before-sleep 'exec $locking'

# statusbar command
# TODO: Change
set $statusbar waybar
set $waybar_position top

# pulseaudio command
set $pulseaudio $term_float pulsemixer

# help command
set $help /usr/share/sway/scripts/help.sh

# calendar application
set $calendar $term_float khal interactive

# workspace names
set $ws1 number 1
set $ws2 number 2
set $ws3 number 3
set $ws4 number 4
set $ws5 number 5
set $ws6 number 6
set $ws7 number 7
set $ws8 number 8
set $ws9 number 9
set $ws10 number 10

# screenshot 
set $grimshot /usr/share/sway/scripts/grimshot
set $image_upload /usr/share/sway/scripts/upload-image.sh
set $screenshot_screen_clipboard $grimshot --notify copy output
set $screenshot_screen_file swappy -f $($grimshot --notify save output)
set $screenshot_screen_upload $screenshot_screen_file | xargs $image_upload
set $screenshot_selection_clipboard $grimshot --notify save area - | swappy -f -
set $screenshot_selection_file swappy -f $($grimshot --notify save area)
set $screenshot_selection_upload $screenshot_selection_file | xargs $image_upload
