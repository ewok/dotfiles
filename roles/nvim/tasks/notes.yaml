- name: "Install"
  tags:
    - note
    - notes
  block:

    - name: "Create basic dirs"
      file:
        dest: "{{ item.dir }}"
        state: directory
      loop:
        - { dir: "~/.config/todo" }
        - { dir: "~/.todo.actions.d/" }

    - name: "notes-sync"
      copy:
        content: |
          #!/bin/env bash
          set -e
          toolbox run -c dev nc -z github.com 22
          DATE=$(date)
          git -C ~/Notes pull
          git -C ~/Notes add .
          git -C ~/Notes commit -m "Auto commit + push. $DATE" || exit 0
          git -C ~/Notes push
        dest: "~/.local/bin/notes-sync"
        mode: 0755

    - name: "notes-sync.service"
      copy:
        content: |
          [Service]
          CPUSchedulingPolicy=idle
          Environment=SSH_AUTH_SOCK={{  lookup('env', 'XDG_RUNTIME_DIR') }}/keyring/ssh
          Environment=SSH_ASKPASS=/var/lib/flatpak/app/org.gnome.seahorse.Application/x86_64/stable/active/files/libexec/seahorse/ssh-askpass
          Environment=SSH_ASKPASS_REQUIRE=prefer
          ExecStart={{ lookup('env', 'HOME') }}/.local/bin/notes-sync
          IOSchedulingClass=idle
          [Unit]
          Description=Sync notes
          Wants=network-online.target
        dest: "~/.config/systemd/user/notes-sync.service"
      notify:
        - "reload notesync"

    - name: "notes-sync.timer"
      copy:
        content: |
          [Install]
          WantedBy=timers.target
          [Timer]
          OnCalendar=*:0/20
          Persistent=true
          Unit=notes-sync.service
          [Unit]
          Description=Sync notes
        dest: "~/.config/systemd/user/notes-sync.timer"
      notify:
        - "reload notesync"

    - name: "start notes-sync.timer"
      ignore_errors: True
      systemd:
        scope: user
        enabled: True
        daemon_reload: True
        name: "notes-sync.timer"
        state: started

    - name: "enable notes-sync.service"
      ignore_errors: True
      systemd:
        scope: user
        enabled: True
        daemon_reload: True
        name: "notes-sync.service"

    - name: "jrnl"
      copy:
        content: |
          NOTE="$HOME/Notes/diary/$(date +%Y-%m-%d).md"
          if [ $# -ge 1 ]
          then
            echo "[$(date +%H:%M)] $*" >> "$NOTE"
            vim -c '$' -c 'startinsert!' "$NOTE"
          else
            vim -c '$' -c 'startinsert!' "$NOTE"
          fi
        dest: "~/.local/bin/jrnl"
        mode: 0755

    - name: "add-note"
      copy:
        content: |
          NOTE="$HOME/Notes/diary/$(date +%Y-%m-%d).md"
          dmenucmd="rofi_run -dmenu -p [$(date +%H:%M)] "
            result=$($dmenucmd | xargs echo)
            if [[ $result ]]; then
              echo >> "$NOTE"
              echo "[$(date +%H:%M)] $result" >> "$NOTE"
              {{ terminal }} -t 'notes-float' -e vim +"silent e $NOTE" -c '$'
            fi
        dest: "~/.local/bin/add-note"
        mode: 0755

    # - name: "add-todo"
    #   copy:
    #     content: |
    #       set -e
    #       NOTE="$HOME/Notes/diary/$(date +%Y-%m-%d).md"
    #       dmenucmd="rofi_run -dmenu -p Todo: "
    #         result=$($dmenucmd | xargs echo)
    #         if [[ $result ]]; then
    #           echo >> "$NOTE"
    #           echo "- [ ] TODO $result" >> "$NOTE"
    #           {{ terminal }} -t 'notes-float' -e vim +"silent e $NOTE" -c '$'
    #         fi
    #     dest: "~/.local/bin/add-todo"
    #     mode: 0755

    - name: "add-todo"
      copy:
        content: |
          set -e
          dmenucmd="rofi_run -dmenu -p Todo: "
            result=$($dmenucmd | xargs echo)
            if [[ $result ]]; then
              emacsclient -c -n "org-protocol://capture://C//$result"
            fi
        dest: "~/.local/bin/add-todo"
        mode: 0755

    # Rofi + todo.txt
    - name: "todofi.sh"
      changed_when: False
      get_url:
        url: "https://raw.githubusercontent.com/hugokernel/todofi.sh/master/todofi.sh"
        dest: "~/.local/bin/todofi.sh"
        mode: 0755
        checksum: "sha256:ba3a2157eb957e3792dc0cdc823bfcce090776a2558efd20ed92b1e8dff33a85"

    - name: "Patch todofi.sh"
      changed_when: False
      patch:
        src: "01_todofish_cal.patch"
        dest: "~/.local/bin/todofi.sh"

    - name: "configure todofi.sh"
      copy:
        content: |
          ROFI_BIN="$(command -v rofi_run)"
          EDITOR="{{terminal}} -e vim"
          SHORTCUT_NEW="Alt+a"
          SHORTCUT_DONE="Alt+d"
          SHORTCUT_EDIT="Alt+e"
          SHORTCUT_SWITCH="Alt+Tab"
          SHORTCUT_TERM="Alt+t"
          SHORTCUT_FILTERS="Alt+p"
          SHORTCUT_CLEAR="Alt+c"
          SHORTCUT_HELP="Super+h"
          TODOFI_CMD_DO="do"
          export TODO_NO_AGAIN_IF_NOT_TAGGED=1
        dest: "~/.config/todofish.conf"

    - name: "Install todo again"
      git:
        repo: "https://github.com/nthorne/todo.txt-cli-again-addon.git"
        dest: "~/.todo.actions.d/again.git"

    - name: "Again symlinks"
      copy:
        src: "~/.todo.actions.d/again.git/{{ item.src }}"
        dest: "~/.todo.actions.d/{{ item.dest }}"
        mode: 0755
      loop:
        - src: "again"
          dest: "do"
        - src: "againFilter.sh"
          dest: "againFilter.sh"
        - src: "againHelpers.sh"
          dest: "againHelpers.sh"

    - name: "install todo.sh"
      get_url:
        url: "https://raw.githubusercontent.com/todotxt/todo.txt-cli/master/todo.sh"
        dest: "{{ item }}"
        mode: 0755
        checksum: "sha256:55e75c88156f009fbc0bfb6e0d36ab98dede4550e987c559dcdb288ed764dd81"
      loop:
        - "~/.local/bin/todo.sh"
        - "~/.local/bin/todo-txt"

    - name: "configure todo.sh"
      copy:
        content: |
          export TODO_NO_AGAIN_IF_NOT_TAGGED=1
          export TODO_DIR="$HOME/Notes/todo"
          export TODO_FILE="$TODO_DIR/todo.txt"
          export TODO_ACTIONS_DIR="$HOME/.todo.actions.d"
          export TODOTXT_FINAL_FILTER="$HOME/.todo.actions.d/againFilter.sh"
        dest: "~/.config/todo/config"

    - name: "t alias"
      copy:
        content: |
          #!/bin/env bash
          #
          export TODOTXT_VERBOSE=0
          export TODO_NO_AGAIN_IF_NOT_TAGGED=1
          if [ "$1" == "lss" ];then
            todo.sh -x ls ''${@:2}
          else
            todo.sh $@
          fi
        dest: "{{ item }}"
        mode: 0755
      loop:
        - "~/.local/bin/t"
